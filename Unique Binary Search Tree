/*

Given n, how many structurally unique BST's (binary search trees) that store values 1 ... n?

Example:

Input: 3
Output: 5
Explanation:
Given n = 3, there are a total of 5 unique BST's:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3


*/

/* Using Catlan Number */

class Solution {
    public int numTrees(int n) {
        
        
        double[] ans = new double[n + 1];
        ans[0] = 1;
        for (int i = 1; i <= n; i++) {
            ans[i] = ans[i - 1] * (4 * i - 2) / (i + 1);
        }
        return (int)ans[n];
        
    }
}
